generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @unique @default(cuid())
  firstName String
  lastName  String
  telephone String?
  email     String    @unique
  password  String
  adress    String?
  town      String?
  zipCode   String?
  role      Role      @default(USER)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  comments  Comment[]
  photos    Photo[]
  tickets   Ticket[]
}

model Ticket {
  id          String     @id @unique @default(cuid())
  title       String
  description String
  deadline    DateTime?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  authorId    String
  comments    Comment[]
  author      User       @relation(fields: [authorId], references: [id])
  categories  Category[] @relation("CategoryToTicket")
  status      Status[]   @relation("StatusToTicket")
}

model Status {
  id        String   @id @unique @default(cuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  tickets   Ticket[] @relation("StatusToTicket")
}

model Category {
  id          String   @id @unique @default(cuid())
  name        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  description String?
  price       String?
  thumbnail   String?
  photos      Photo[]  @relation("CategoryToPhoto")
  tickets     Ticket[] @relation("CategoryToTicket")
}

model Photo {
  id          String         @id @unique @default(cuid())
  url         String         @unique
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  userId      String
  description String?
  title       String?
  author      User           @relation(fields: [userId], references: [id])
  categories  Category[]     @relation("CategoryToPhoto")
  galleries   PhotoGallery[] @relation("PhotoToPhotoGallery")
}

model PhotoGallery {
  id        String   @id @unique @default(cuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  photos    Photo[]  @relation("PhotoToPhotoGallery")
}

model Comment {
  id        String         @id @unique @default(cuid())
  text      String
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  authorId  String
  ticketId  String
  status    StatusComments @default(SENT)
  author    User           @relation(fields: [authorId], references: [id])
  ticket    Ticket         @relation(fields: [ticketId], references: [id])
}

enum Role {
  ADMIN
  USER
}

enum StatusComments {
  SENT
  RECEIVED
  READ
}
